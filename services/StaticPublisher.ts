import * as path from 'path';
import dayjs from 'dayjs';
import * as fs from 'fs';

import WorkPublisher from './WorkPublisher';
import ArticlePublisher from './ArticlePublisher';
import escapeHTML from './utils/escapeHTML';

class StaticPublisher {
  public static publishSitemap() {
    const workFiles: string[] = WorkPublisher.getWorkMarkdownFiles();
    const works = workFiles.map((file, idx) => (
      WorkPublisher.getWorkByFilename(idx, file).getWork()
    ));

    const articleFiles: string[] = ArticlePublisher.getArticleMarkdownFiles();
    const articles = articleFiles.map((file) => (
      ArticlePublisher.getArticleByFilename(file).getArticle()
    ));

    const SITEMAP_PATH: string = path.join(__dirname, '../app/static/sitemap.xml');

    const articleUrls = articles.map((article) => `<url><loc>https://parksb.github.io/article/${article.id}.html</loc><changefreq>daily</changefreq><priority>1.00</priority></url>`);
    const workUrls = works.map((work) => `<url><loc>https://parksb.github.io/work/${work.id}.html</loc><changefreq>daily</changefreq><priority>1.00</priority></url>`);
    const content = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
<!-- Generated by Web-Site-Map.com -->
<url><loc>https://parksb.github.io/</loc><lastmod>${dayjs().format('YYYY-MM-DDTHH:mm:ss')}+09:00</lastmod><changefreq>daily</changefreq><priority>1.00</priority></url>
${workUrls.join('\n')}
${articleUrls.join('\n')}
</urlset>
`;

    fs.writeFileSync(SITEMAP_PATH, content);
  }

  public static publishRSS() {
    const header = `<rss version="2.0">
<channel>
<title>Simon Park</title>
<link>https://parksb.github.io/</link>
<description>Recently published articles written by Simon Park</description>
<language>ko-kr</language>
<lastBuildDate>${dayjs().format('ddd, D MMM YYYY HH:mm:ss')} +0900</lastBuildDate>
`;

    const footer = `</channel>
</rss>
`;

    const DESCRIPTION_LENGTH = 180;
    const ITEM_LIMIT_COUNT = 10;
    const articleFiles: string[] = ArticlePublisher.getArticleMarkdownFiles();
    const articles = articleFiles.map((file) => (
      ArticlePublisher.getArticleByFilename(file).getArticle()
    ));
    const items = articles.slice(-ITEM_LIMIT_COUNT).reverse().map((article) => {
      const description = `${escapeHTML(article.content).slice(0, DESCRIPTION_LENGTH)}...`;
      const pubDate = `${dayjs(article.date.replace('.', '-')).format('ddd, D MMM YYYY HH:mm:ss')} +0900`;

      return `<item>
<title>${article.title}</title>
<link>https://parksb.github.io/article/${article.id}.html</link>
<description>${description}</description>
<pubDate>${pubDate}</pubDate>
</item>
`;
    }).join('');

    const RSS_PATH: string = path.join(__dirname, '../app/static/feed.xml');
    fs.writeFileSync(RSS_PATH, `${header}${items}${footer}`);
  }
}

export default StaticPublisher;
